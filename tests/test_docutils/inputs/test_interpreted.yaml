basics:
  - in:
      - '`interpreted`'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            interpreted'
  - in:
      - :title:`interpreted`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            interpreted'
  - in:
      - '`interpreted`:title:'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            interpreted'
  - in:
      - '`interpreted \`title``'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            interpreted `title`'
  - in:
      - ':title:`:not-role: interpreted`'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            :not-role: interpreted'
  - in:
      - '`interpreted` but not \`interpreted` [`] or ({[`] or [`]}) or `'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            interpreted'
      - '         but not `interpreted` [`] or ({[`] or [`]}) or `'
  - in:
      - '`interpreted`-text `interpreted`: text `interpreted`:text `text`''s interpreted'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            interpreted'
      - '        -text '
      - '        <title_reference>'
      - '            interpreted'
      - '        : text '
      - '        <title_reference>'
      - '            interpreted'
      - '        :text '
      - '        <title_reference>'
      - '            text'
      - '        ''s interpreted'
  - in:
      - '`interpreted without closing backquote'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            `'
      - '        interpreted without closing backquote'
      - '    <system_message backrefs="id2" ids="id1" level="2" line="1" source="test
        data" type="WARNING">'
      - '        <paragraph>'
      - '            Inline interpreted text or phrase reference start-string without
        end-string.'
  - in:
      - '`interpreted`:not a role if it contains whitespace:'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            interpreted'
      - '        :not a role if it contains whitespace:'
  - in:
      - :title:`` (empty interpreted text not recognized)
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        :title:`` (empty interpreted text not recognized)'
  - in:
      - :title:`\ ` (interpreted text containing empty string)
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '         (interpreted text containing empty string)'
  - in:
      - '`\ `:title: (interpreted text containing empty string (postfix))'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '         (interpreted text containing empty string (postfix))'
  - in:
      - :title:`\ non-empty`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <title_reference>'
      - '            non-empty'
  - in:
      - :title:`\  ` (trailing unquoted space)
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        :title:'
      - '        <problematic ids="id2" refid="id1">'
      - '            `'
      - '         ` (trailing unquoted space)'
      - '    <system_message backrefs="id2" ids="id1" level="2" line="1" source="test
        data" type="WARNING">'
      - '        <paragraph>'
      - '            Inline interpreted text or phrase reference start-string without
        end-string.'
  - in:
      - 'Explicit roles for standard inline markup:'
      - :emphasis:`emphasis`,
      - :strong:`strong`,
      - :literal:`inline literal text`.
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        Explicit roles for standard inline markup:'
      - '        <emphasis>'
      - '            emphasis'
      - '        ,'
      - '        <strong>'
      - '            strong'
      - '        ,'
      - '        <literal>'
      - '            inline literal text'
      - '        .'
  - in:
      - 'Simple explicit roles:'
      - :ab:`abbreviation`,
      - :ac:`acronym`,
      - :sup:`superscript`,
      - :sub:`subscript`,
      - :title:`title reference`.
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        Simple explicit roles:'
      - '        <abbreviation>'
      - '            abbreviation'
      - '        ,'
      - '        <acronym>'
      - '            acronym'
      - '        ,'
      - '        <superscript>'
      - '            superscript'
      - '        ,'
      - '        <subscript>'
      - '            subscript'
      - '        ,'
      - '        <title_reference>'
      - '            title reference'
      - '        .'
code:
  - in:
      - 'Code role for inline code snippets:'
      - ":code:`$\\alpha = \\int_0^\\infty f(x) dx$`."
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        Code role for inline code snippets:'
      - '        <literal classes="code">'
      - "            $\\alpha = \\int_0^\\infty f(x) dx$"
      - '        .'
code-parsing:
  - in:
      - '.. role:: tex(code)'
      - '   :language: latex'
      - ''
      - 'Custom role based on code role:'
      - ":tex:`$\alpha = f(x)$`."
      - ''
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        Custom role based on code role:'
      - '        <literal classes="code tex latex">'
      - '            <inline classes="literal string">'
      - '                $'
      - '            <inline classes="name builtin">'
      - "                \alpha "
      - '            <inline classes="operator">'
      - '                ='
      - '            <inline classes="name builtin">'
      - '                 f'
      - '            <inline classes="operator">'
      - '                ('
      - '            <inline classes="name builtin">'
      - '                x'
      - '            <inline classes="operator">'
      - '                )'
      - '            <inline classes="literal string">'
      - '                $'
      - '        .'
  - in:
      - 'Custom role based on code role:'
      - ''
      - '.. role:: python(code)'
      - '   :language: python'
      - '   :class: testclass'
      - ''
      - Python code :python:`print("The end")`.
      - ''
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        Custom role based on code role:'
      - '    <paragraph>'
      - '        Python code '
      - '        <literal classes="code testclass python">'
      - '            <inline classes="keyword">'
      - '                print'
      - '            <inline classes="punctuation">'
      - '                ('
      - '            <inline classes="literal string double">'
      - '                "The end"'
      - '            <inline classes="punctuation">'
      - '                )'
      - '        .'
references:
  - in:
      - :PEP:`0`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <reference refuri="http://www.python.org/dev/peps/pep-0000">'
      - '            PEP 0'
  - in:
      - :PEP:`-1`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            :PEP:`-1`'
      - '    <system_message backrefs="id2" ids="id1" level="3" line="1" source="test
        data" type="ERROR">'
      - '        <paragraph>'
      - '            PEP number must be a number from 0 to 9999; "-1" is invalid.'
  - in:
      - :RFC:`2822`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <reference refuri="http://tools.ietf.org/html/rfc2822.html">'
      - '            RFC 2822'
  - in:
      - :RFC:`0`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            :RFC:`0`'
      - '    <system_message backrefs="id2" ids="id1" level="3" line="1" source="test
        data" type="ERROR">'
      - '        <paragraph>'
      - '            RFC number must be a number greater than or equal to 1; "0" is
        invalid.'
  - in:
      - :RFC:`2822#section1`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <reference refuri="http://tools.ietf.org/html/rfc2822.html#section1">'
      - '            RFC 2822'
unknown_roles:
  - in:
      - :role:`interpreted`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            :role:`interpreted`'
      - '    <system_message level="1" line="1" source="test data" type="INFO">'
      - '        <paragraph>'
      - '            No role entry for "role" in module "docutils.parsers.rst.languages.en".'
      - '            Trying "role" as canonical role name.'
      - '    <system_message backrefs="id2" ids="id1" level="3" line="1" source="test
        data" type="ERROR">'
      - '        <paragraph>'
      - '            Unknown interpreted text role "role".'
  - in:
      - '`interpreted`:role:'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            `interpreted`:role:'
      - '    <system_message level="1" line="1" source="test data" type="INFO">'
      - '        <paragraph>'
      - '            No role entry for "role" in module "docutils.parsers.rst.languages.en".'
      - '            Trying "role" as canonical role name.'
      - '    <system_message backrefs="id2" ids="id1" level="3" line="1" source="test
        data" type="ERROR">'
      - '        <paragraph>'
      - '            Unknown interpreted text role "role".'
  - in:
      - ':role:`interpreted`:role:'
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            :role:`interpreted`:role:'
      - '    <system_message backrefs="id2" ids="id1" level="2" line="1" source="test
        data" type="WARNING">'
      - '        <paragraph>'
      - '            Multiple roles in interpreted text (both prefix and suffix present;
        only one allowed).'
  - in:
      - :very.long-role_name:`interpreted`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            :very.long-role_name:`interpreted`'
      - '    <system_message level="1" line="1" source="test data" type="INFO">'
      - '        <paragraph>'
      - '            No role entry for "very.long-role_name" in module "docutils.parsers.rst.languages.en".'
      - '            Trying "very.long-role_name" as canonical role name.'
      - '    <system_message backrefs="id2" ids="id1" level="3" line="1" source="test
        data" type="ERROR">'
      - '        <paragraph>'
      - '            Unknown interpreted text role "very.long-role_name".'
  - in:
      - :restructuredtext-unimplemented-role:`interpreted`
    out:
      - <document source="test data">
      - '    <paragraph>'
      - '        <problematic ids="id2" refid="id1">'
      - '            :restructuredtext-unimplemented-role:`interpreted`'
      - '    <system_message level="1" line="1" source="test data" type="INFO">'
      - '        <paragraph>'
      - '            No role entry for "restructuredtext-unimplemented-role" in module
        "docutils.parsers.rst.languages.en".'
      - '            Trying "restructuredtext-unimplemented-role" as canonical role
        name.'
      - '    <system_message backrefs="id2" ids="id1" level="3" line="1" source="test
        data" type="ERROR">'
      - '        <paragraph>'
      - '            Interpreted text role "restructuredtext-unimplemented-role" not
        implemented.'
